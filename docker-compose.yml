services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: cardflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cardflow}
      POSTGRES_USER: ${POSTGRES_USER:-cardflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set in .env file}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cardflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cardflow}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cardflow-redis
    restart: unless-stopped
    command: redis-server ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - cardflow-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend Laravel
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cardflow-backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/storage:/var/www/storage
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB:-cardflow}
      DB_USERNAME: ${POSTGRES_USER:-cardflow}
      DB_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-null}
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      APP_KEY: ${APP_KEY:?APP_KEY must be set}
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cardflow-network
    healthcheck:
      test: ["CMD-SHELL", "php artisan | grep 'Laravel Framework' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Web Server + Proxy)
  nginx:
    image: nginx:alpine
    container_name: cardflow-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend:/var/www
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deploy/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./deploy/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - voice-ia
    networks:
      - cardflow-network

  # Microservi√ßo de IA de Voz
  voice-ia:
    build:
      context: ./voice-ia-service
      dockerfile: Dockerfile
    container_name: cardflow-voice-ia
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BACKEND_API_URL: http://nginx
    env_file:
      - ./voice-ia-service/.env
    depends_on:
      - redis
    networks:
      - cardflow-network

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost/api
        NEXT_PUBLIC_VOICE_API_URL: http://localhost:3001
    container_name: cardflow-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    depends_on:
      - backend
      - voice-ia
    networks:
      - cardflow-network

networks:
  cardflow-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
