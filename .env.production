# ==================================
# CARDFLOW - AMBIENTE DE PRODUÇÃO
# ==================================

# APLICAÇÃO
APP_NAME=CardFlow
APP_ENV=production
APP_KEY=
APP_DEBUG=false
APP_TIMEZONE=America/Sao_Paulo
APP_URL=http://seu-ip-ec2-aqui

# FRONTEND
NEXT_PUBLIC_API_URL=http://seu-ip-ec2-aqui:8000
NEXT_PUBLIC_APP_URL=http://seu-ip-ec2-aqui
NEXTAUTH_URL=http://seu-ip-ec2-aqui
NEXTAUTH_SECRET=gere-uma-chave-secreta-aleatoria-aqui-32-caracteres

# LOG
APP_LOG_LEVEL=error
LOG_CHANNEL=daily
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=error

# DATABASE
DB_CONNECTION=mysql
DB_HOST=mysql
DB_PORT=3306
DB_DATABASE=cardflow_prod
DB_USERNAME=cardflow_user
DB_PASSWORD=SENHA_FORTE_MYSQL_AQUI_123!
DB_ROOT_PASSWORD=SENHA_ROOT_MYSQL_AINDA_MAIS_FORTE_456!

# REDIS
REDIS_HOST=redis
REDIS_PASSWORD=null
REDIS_PORT=6379
REDIS_CLIENT=predis

# CACHE
CACHE_DRIVER=redis
CACHE_PREFIX=cardflow_cache

# SESSION
SESSION_DRIVER=redis
SESSION_LIFETIME=120
SESSION_ENCRYPT=true
SESSION_PATH=/
SESSION_DOMAIN=null
SESSION_SECURE_COOKIE=false

# QUEUE
QUEUE_CONNECTION=redis
QUEUE_PREFIX=cardflow_queue

# FILESYSTEM
FILESYSTEM_DISK=local

# MAIL (Configure com seu provedor de email)
MAIL_MAILER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS="noreply@cardflow.com"
MAIL_FROM_NAME="${APP_NAME}"

# AWS (Se usar S3 para uploads)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

# PUSHER (Se usar WebSockets)
PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=mt1

# VITE
VITE_APP_NAME="${APP_NAME}"
VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_HOST="${PUSHER_HOST}"
VITE_PUSHER_PORT="${PUSHER_PORT}"
VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

# JWT (IMPORTANTE - Gere uma chave forte)
JWT_SECRET=sua-chave-jwt-super-secreta-de-256-bits-aqui
JWT_TTL=60
JWT_REFRESH_TTL=20160

# STRIPE (Pagamentos)
STRIPE_KEY=pk_live_seu_stripe_public_key
STRIPE_SECRET=sk_live_seu_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_seu_webhook_secret

# OPENAI (IA para flashcards e voz)
OPENAI_API_KEY=sk-seu-openai-api-key-aqui
OPENAI_ORGANIZATION=sua-organization-id
OPENAI_MODEL=gpt-4

# VOICE SERVICE
VOICE_SERVICE_URL=http://voice-service:3001

# CORS
SANCTUM_STATEFUL_DOMAINS=seu-ip-ec2-aqui,localhost
SESSION_DOMAIN=.seu-dominio.com

# L5-SWAGGER (API Documentation)
L5_SWAGGER_CONST_HOST=http://seu-ip-ec2-aqui:8000

# SCOUT (Se usar busca)
SCOUT_DRIVER=database

# SOCIALITE (Login Social - Opcional)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=

FACEBOOK_CLIENT_ID=
FACEBOOK_CLIENT_SECRET=
FACEBOOK_REDIRECT_URI=

GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_REDIRECT_URI=

# SENTRY (Monitoramento de Erros - Opcional)
SENTRY_LARAVEL_DSN=
SENTRY_TRACES_SAMPLE_RATE=0.2

# ANALYTICS (Opcional)
GOOGLE_ANALYTICS_ID=
FACEBOOK_PIXEL_ID=

# RATE LIMITING
THROTTLE_RATE_LIMIT=60
THROTTLE_DECAY_MINUTES=1

# BACKUP (Configurações de backup automático)
BACKUP_DISK=local
BACKUP_NOTIFICATION_EMAIL=seu-email@exemplo.com

# TIMEZONE
APP_TIMEZONE=America/Sao_Paulo
DB_TIMEZONE=+00:00

# ==================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# ==================================
#
# 1. GERAR APP_KEY:
#    docker-compose exec backend php artisan key:generate
#
# 2. GERAR JWT_SECRET:
#    docker-compose exec backend php artisan jwt:secret
#
# 3. GERAR NEXTAUTH_SECRET:
#    Execute no terminal: openssl rand -base64 32
#    Ou use: https://generate-secret.vercel.app/32
#
# 4. SENHAS FORTES:
#    Use geradores de senha online ou:
#    openssl rand -base64 32
#
# 5. CONFIGURAR STRIPE:
#    - Crie conta em https://stripe.com
#    - Obtenha as chaves em Dashboard → Developers → API keys
#    - Configure webhook para pagamentos
#
# 6. CONFIGURAR OPENAI:
#    - Crie conta em https://platform.openai.com
#    - Gere API key em API keys
#    - Adicione créditos para uso
#
# 7. DOMÍNIO CUSTOMIZADO:
#    - Substitua "seu-ip-ec2-aqui" pelo seu domínio
#    - Configure DNS apontando para IP da EC2
#    - Ative SSL com Certbot (ver guia de deploy)
#
# 8. EMAIL:
#    Recomendações de provedores:
#    - Amazon SES (AWS)
#    - SendGrid
#    - Mailgun
#    - Postmark
#
# ==================================
