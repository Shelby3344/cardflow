server {
    listen 80;
    server_name localhost;
    root /var/www/public;

    # Security Headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(self), camera=(), payment=()" always;
    
    # Content Security Policy (ajustar conforme necessário)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' http://localhost:3001 ws://localhost:3001; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # Hide Nginx version
    server_tokens off;
    
    # Client upload limit
    client_max_body_size 10M;

    index index.php;

    charset utf-8;

    # Laravel Backend API
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        limit_req zone=api_limit burst=30 nodelay;
    }
    
    # Auth endpoints with stricter rate limiting
    location ~ ^/(api/)?(login|register|password) {
        try_files $uri $uri/ /index.php?$query_string;
        limit_req zone=login_limit burst=5 nodelay;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass backend:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_read_timeout 60s;
        fastcgi_send_timeout 60s;
    }

    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to sensitive files
    location ~ \.(env|git|gitignore|htaccess|sql|backup|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Static files with caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Proxy para microserviço de IA de voz
    location /voice-api/ {
        proxy_pass http://voice-ia:3001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS Configuration (produção)
# Descomentar e configurar certificados SSL antes de usar em produção
# server {
#     listen 443 ssl http2;
#     server_name cardflow.com www.cardflow.com;
#     root /var/www/public;
#
#     # SSL Certificates (Let's Encrypt recommended)
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#
#     # SSL Configuration (Mozilla Modern)
#     ssl_protocols TLSv1.3 TLSv1.2;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;
#
#     # HSTS (uncomment after testing HTTPS works correctly)
#     # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#
#     # All other security headers (same as HTTP config above)
#     add_header X-Frame-Options "DENY" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     add_header Permissions-Policy "geolocation=(), microphone=(self), camera=(), payment=()" always;
#     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss://cardflow.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;
#
#     server_tokens off;
#     client_max_body_size 10M;
#
#     # ... (include all location blocks from HTTP config)
# }
#
# # HTTP to HTTPS redirect
# server {
#     listen 80;
#     server_name cardflow.com www.cardflow.com;
#     return 301 https://$server_name$request_uri;
# }
