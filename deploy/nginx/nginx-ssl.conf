# ==================================
# CONFIGURAÇÃO NGINX PARA PRODUÇÃO
# HTTP + HTTPS (com SSL)
# ==================================

# Redirecionar HTTP para HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name cardflow.com www.cardflow.com api.cardflow.com;

    # Certbot challenge (Let's Encrypt)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirecionar todo tráfego HTTP para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ==================================
# FRONTEND - HTTPS
# ==================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cardflow.com www.cardflow.com;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/cardflow.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cardflow.com/privkey.pem;

    # SSL Configuration (Mozilla Modern)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.cardflow.com wss://api.cardflow.com;" always;

    # Logs
    access_log /var/log/nginx/frontend_access.log;
    error_log /var/log/nginx/frontend_error.log;

    # Rate limiting
    limit_req zone=general_limit burst=20 nodelay;

    # Client settings
    client_max_body_size 20M;
    client_body_buffer_size 128k;

    # Proxy settings
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Next.js static files
    location /_next/static {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # Cache estático por 1 ano
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# ==================================
# BACKEND API - HTTPS
# ==================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.cardflow.com;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/cardflow.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cardflow.com/privkey.pem;

    # SSL Configuration (mesmas configurações do frontend)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logs
    access_log /var/log/nginx/backend_access.log;
    error_log /var/log/nginx/backend_error.log;

    # Rate limiting - mais restritivo para API
    limit_req zone=api_limit burst=5 nodelay;

    # Client settings
    client_max_body_size 20M;
    client_body_buffer_size 128k;

    # Laravel API
    location / {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # CORS headers (se necessário)
        add_header 'Access-Control-Allow-Origin' 'https://cardflow.com' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://cardflow.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Storage files (Laravel)
    location /storage {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # Cache por 1 dia
        add_header Cache-Control "public, max-age=86400";
    }

    # API Documentation
    location /api/documentation {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# ==================================
# VOICE SERVICE (OPCIONAL)
# ==================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name voice.cardflow.com;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/cardflow.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cardflow.com/privkey.pem;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Logs
    access_log /var/log/nginx/voice_access.log;
    error_log /var/log/nginx/voice_error.log;

    # Voice IA Service
    location / {
        proxy_pass http://voice-service:3001;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts maiores para processamento de áudio
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
}

# ==================================
# UPSTREAM DEFINITIONS
# ==================================
upstream frontend {
    server frontend:3000;
    keepalive 32;
}

upstream backend {
    server backend:8000;
    keepalive 32;
}

upstream voice_service {
    server voice-service:3001;
    keepalive 16;
}
